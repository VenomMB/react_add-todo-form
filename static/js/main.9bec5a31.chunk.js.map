{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","visibleTodos","map","todos","userId","usersFromServer","find","App","useState","setTitle","userSelect","setUserSelect","addTodo","showOnStart","setShowOnStart","newId","Math","max","action","method","onSubmit","event","preventDefault","trim","nameUser","newTodo","state","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bec5a31.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/interface';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/interface';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    completed,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames('TodoInfo', {\n          'TodoInfo--completed': completed,\n        })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/interface';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  visibleTodos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ visibleTodos }) => {\n  return (\n    <section className=\"TodoList\">\n      {visibleTodos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/interface';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserByName(nameUser: string) {\n  return usersFromServer.find(({ name }) => name === nameUser) || null;\n}\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(({ id }) => id === userId) || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userSelect, setUserSelect] = useState('');\n  const [visibleTodos, addTodo] = useState(todos);\n  const [showOnStart, setShowOnStart] = useState(false);\n\n  const newId = Math.max(...visibleTodos.map(({ id }) => id)) + 1;\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setShowOnStart(true);\n    if (title.trim() && userSelect) {\n      const user = getUserByName(userSelect);\n      const todo = {\n        id: newId,\n        title,\n        completed: false,\n        userId: user?.id,\n      };\n\n      const newTodo = {\n        ...todo,\n        user,\n      };\n\n      addTodo(state => [...state, newTodo]);\n      setUserSelect('');\n      setTitle('');\n      setShowOnStart(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Titile: </span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"EnterTitle\"\n              value={title}\n              onChange={(event) => setTitle(event.target.value)}\n            />\n          </label>\n\n          {(showOnStart && !title)\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              value={userSelect}\n              onChange={(event) => setUserSelect(event.target.value)}\n            >\n              <option value=\"\">Choose a user</option>\n              {usersFromServer.map(({ name, id }) => (\n                <option value={name} key={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {(showOnStart && !userSelect)\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList visibleTodos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}